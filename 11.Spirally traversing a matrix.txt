//{ Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int>> matrix, int r, int c)
{
    int sp = c * r;
    int up, down;
    int left, right;
    left = -1;
    right = c;
    up = 0;
    down = r;
    vector<int> ans;
    int i = 0, j = 0;

    while (sp > 0)
    {
        for (i = left + 1; i < right; i++)
        {
            ans.push_back(matrix[j][i]);
            sp--;
        }
        up++;

        for (j = up; j < down; j++)
        {
            ans.push_back(matrix[j][right - 1]);
            sp--;
        }
        right--;

        if (sp > 0)
        {
            for (i = right - 1; i > left; i--)
            {
                ans.push_back(matrix[down - 1][i]);
                sp--;
            }
            down--;
        }

        if (sp > 0)
        {
            for (j = down - 1; j > up - 1; j--)
            {
                ans.push_back(matrix[j][left + 1]);
                sp--;
            }
            left++;
        }
        j++;
    }
    return ans;
}
};

//{ Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}
// } Driver Code Ends